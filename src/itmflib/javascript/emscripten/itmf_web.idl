enum ITMFEncodingOrder {
	"ITMFEncodingOrder::STREAMS_AT_START",
	"ITMFEncodingOrder::STREAMS_AT_END"
};

enum ITMFSignature {
	"ITMFSignature::NONE"
};

enum ITMFCompression {
	"ITMFCompression::NONE"
};

interface ITMFStringArray {
	void ITMFStringArray();
	[Const] DOMString GetValue(long index);
	long Size();
};

interface ITMFConfiguration {
	void ITMFConfiguration(ITMFEncodingOrder encodingOrder,
		boolean includeProperties,
		boolean includeIndex,
		ITMFSignature signature,
		ITMFCompression compression);
};

interface ITMFEncoder {
	void ITMFEncoder();
	void InitStreamsAtStart();
	void InitStreamsAtEnd();
	void InitCustom(ITMFConfiguration configuration);
	void AddStringProperty(DOMString key, DOMString value);
	void AddLongProperty(DOMString key, long value);
	boolean AddFile(DOMString filename, [Const] byte[] buffer, unsigned long long size);
	void Write(DOMString filename);
};

interface ITMFDecoder {
	void ITMFDecoder();
	void ReadFile([Const] byte[] buffer, unsigned long long size);
	void PrintFileList();
	void GetFileList(ITMFStringArray strarray);
	void ExtractFile(DOMString filename, DOMString destination);
	void ExtractAllFiles(DOMString destination);
};